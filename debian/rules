#!/usr/bin/make -f

include /usr/share/dpkg/pkg-info.mk

NVIDIA_DIRECTORIES := $(shell find /usr/src/ -maxdepth 1 -type d -name 'nvidia-*')
NVIDIA_LATEST_VERSION := $(shell echo $(NVIDIA_DIRECTORIES) | tr ' ' '\n' | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' | sort -rV | head -n 1)
NVIDIA_PKG_VER := $(shell dpkg-query --showformat='$${Version}' --show nvidia-dkms-525)

ifeq ($(shell lsb_release -si),Ubuntu)
NVIDIA_MODULE=nvidia
else
NVIDIA_MODULE=nvidia-current
endif

OUTPUT_DIR := $(CURDIR)/debian/tmp

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
else
	NUMJOBS = 1
endif

%:
	dh $@ --with config-package

override_dh_auto_clean:
	true

override_dh_auto_build:
	mkdir $(OUTPUT_DIR)
	cp $(CURDIR)/debian/config-virt $(CURDIR)/.config
	make olddefconfig
	make -j$(NUMJOBS)

override_dh_auto_install:
	# Install Linux and its modules
	mkdir -p $(OUTPUT_DIR)/usr/lib/yagna/boot
	make INSTALL_PATH=$(OUTPUT_DIR)/usr/lib/yagna/boot INSTALL_MOD_PATH=$(OUTPUT_DIR)/usr/lib/yagna/ install modules_install

	# Build NVIDIA modules
	mkdir -p $(OUTPUT_DIR)/dkms
	SYSSRC=$(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/build /sbin/dkms build -m $(NVIDIA_MODULE) -v $(NVIDIA_LATEST_VERSION) -k $(DEB_VERSION_UPSTREAM) \
		--no-clean-kernel \
		--no-prepare-kernel \
		--kernelsourcedir $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/build \
		--dkmstree $(OUTPUT_DIR)/dkms

	# Put NVIDIA modules into the modules tree
	mkdir -p $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/updates/dkms
	mv $(OUTPUT_DIR)/dkms/$(NVIDIA_MODULE)/$(NVIDIA_LATEST_VERSION)/$(DEB_VERSION_UPSTREAM)/x86_64/module/*.ko \
		$(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/updates/dkms

	# Create symlink of built kernel into ya-runtime-vm runtime directory
	mkdir -p $(OUTPUT_DIR)/usr/lib/yagna/plugins/ya-runtime-vm/runtime
	ln -s ../../../boot/vmlinuz-$(DEB_VERSION_UPSTREAM) $(OUTPUT_DIR)/usr/lib/yagna/plugins/ya-runtime-vm/runtime/vmlinuz-virt.nvidia

	# Create modules.cpio.gz
	mkdir $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/virtio/virtio.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/virtio/virtio_ring.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/virtio/virtio_pci.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/char/hw_random/rng-core.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/char/hw_random/virtio-rng.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/char/virtio_console.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/block/virtio_blk.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/net/tun.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/net/net_failover.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/drivers/net/virtio_net.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/fs/9p/9p.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/fs/squashfs/squashfs.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/fs/overlayfs/overlay.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/fs/fscache/fscache.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/net/9p/9pnet.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/net/9p/9pnet_virtio.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/net/core/failover.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/net/ipv6/ipv6.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/kernel/net/packet/af_packet.ko $(OUTPUT_DIR)/modules
	cp $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/updates/dkms/nvidia*.ko $(OUTPUT_DIR)/modules
	cd $(OUTPUT_DIR)/modules && find . | cpio --quiet -o -H newc -R 0:0 | gzip -9 > $(OUTPUT_DIR)/usr/lib/yagna/plugins/ya-runtime-vm/runtime/modules.cpio.gz

	# Cleanup
	rm -rf $(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/source \
		$(OUTPUT_DIR)/usr/lib/yagna/lib/modules/$(DEB_VERSION_UPSTREAM)/build \
		$(OUTPUT_DIR)/dkms \
		$(OUTPUT_DIR)/modules

override_dh_gencontrol:
	echo "nvidia:Version=nvidia-dkms-525 (= $(NVIDIA_PKG_VER))" >> $(CURDIR)/debian/golem-nvidia-kernel.substvars
	dh_gencontrol
