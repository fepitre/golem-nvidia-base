name: Build Ubuntu Package

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main
      - devel

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set env
      run: echo "VERSION=$(dpkg-parsechangelog --show-field Version)" >> "$GITHUB_ENV"

    - name: Download Linux Kernel
      run: |
        git clone --no-checkout https://github.com/fepitre/qubes-builderv2
        git -C qubes-builderv2 checkout a6416da0b6356d0341aff75683fbd13a8f0dd6e6
        DEBUG=1 qubes-builderv2/qubesbuilder/plugins/fetch/scripts/download-file \
          --output-dir "${GITHUB_WORKSPACE}/" \
          --file-name "linux-${VERSION%-*}.tar.xz" \
          --file-url "https://cdn.kernel.org/pub/linux/kernel/v${VERSION:0:1}.x/linux-${VERSION%-*}.tar.xz" \
          --signature-url "https://cdn.kernel.org/pub/linux/kernel/v${VERSION:0:1}.x/linux-${VERSION%-*}.tar.sign" \
          --uncompress
        DEBUG=1 qubes-builderv2/qubesbuilder/plugins/fetch/scripts/verify-file \
          --output-dir "${GITHUB_WORKSPACE}/" \
          --untrusted-file "${GITHUB_WORKSPACE}/untrusted_linux-${VERSION%-*}.tar" \
          --untrusted-signature-file "${GITHUB_WORKSPACE}/untrusted_linux-${VERSION%-*}.tar.sign" \
          --pubkey-file debian/kernel.org-1-key.asc \
          --pubkey-file debian/kernel.org-2-key.asc
        xz "linux-${VERSION%-*}.tar"
        mv "linux-${VERSION%-*}.tar.xz" "golem-nvidia-kernel_${VERSION%-*}.orig.tar.xz"

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pbuilder

    - name: Create package
      run: |
        mkdir "${GITHUB_WORKSPACE}/build"
        cp -r "${GITHUB_WORKSPACE}/debian" "${GITHUB_WORKSPACE}/build/"
        cd "${GITHUB_WORKSPACE}/build"
        tar --strip-components=1 -xf ../"golem-nvidia-kernel_${VERSION%-*}.orig.tar.xz"
        dpkg-source -b .
        sudo pbuilder create --distribution jammy --othermirror 'deb http://fr.archive.ubuntu.com/ubuntu jammy-updates main universe multiverse restricted|deb http://fr.archive.ubuntu.com/ubuntu jammy-security main universe multiverse restricted'
        sudo pbuilder build \
          --distribution jammy \
          --othermirror 'deb http://fr.archive.ubuntu.com/ubuntu jammy-updates main universe multiverse restricted|deb http://fr.archive.ubuntu.com/ubuntu jammy-security main universe multiverse restricted' \
          ../"golem-nvidia-kernel_${VERSION}.dsc"

    - uses: actions/upload-artifact@v3
      with:
        name: golem-nvidia-kernel.deb
        path: /var/cache/pbuilder/result/golem-nvidia-kernel_*amd64.deb
